required

*** - set a max size for the queue.  currently disk space can be used until exhausted
- on pop, instead of removing from memory segments, mark them as popped.  then on commit, remove them and report
  to journal.  this should be doable because the segments use a Map for fast lookup of entries
- insure two Fpq instances cannot use same directory - somehow will require use of the Fpq 'name' or 'id'

desired

- work on a serialization and queue paradigm such that byte[] are not copied until out to disk or popped.
  maintain an ordered collection of byte[] throughout pushing and popping until written to disk or popped to customer
- add assertions to operations that should have known state - like paging in/out
- disk space is wasted because paged memory segments dupe what is already in journals.  maybe someone can optimize this?

